plugins {
    id "idea"
    id "fabric-loom" version "1.0.12" apply true
    id 'maven-publish'
}
configurations {
    dev {
        canBeResolved = false
        canBeConsumed = true
    }
}
artifacts {
    dev jar
}

dependencies {
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    implementation 'org.jetbrains:annotations:23.0.0'
    implementation 'org.projectlombok:lombok:1.18.24'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.0'
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modApi "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modCompileOnly 'software.bernie.geckolib:geckolib-fabric-1.19:3.1.38'

}


processResources {
    inputs.property "version", rootProject.version

    filesMatching("fabric.mod.json") {
        expand "version": rootProject.version
    }
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    //withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${rootProject.archivesBaseName}" }
    }
}

// configure the maven publication
publishing {

}


sourceSets {
    forgero {
        compileClasspath += main.compileClasspath
        runtimeClasspath += main.runtimeClasspath
    }

    main {
        resources {
            srcDirs += [
                    'src/main/generated'
            ]
        }
    }

    test {
        compileClasspath += test.compileClasspath
        runtimeClasspath += test.runtimeClasspath
    }
}

loom {
    runs {
        testmodServer {
            server()
            ideConfigGenerated project.rootProject == project
            name = "Testmod Server"
            source sourceSets.test
        }
        gametest {
            inherit testmodServer

            name "Game Test"
            // Enable the gametest runner
            vmArg "-Dfabric-api.gametest"
            vmArg "-Dfabric-api.gametest.report-file=${project.buildDir}/junit.xml"
            runDir "build/gametest"
        }
    }
}
